[metadata]
name = pyuavcan
version = attr: pyuavcan.__version__
author = UAVCAN Development Team
author_email = uavcan-maintainers@googlegroups.com
url = https://uavcan.org
description = A full-featured implementation of the UAVCAN stack in Python
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
keywords = uavcan, data-bus, can-bus, ethernet, vehicular, onboard-networking, avionics, communication-protocol
classifiers =
    Intended Audience :: Developers
    Topic :: Scientific/Engineering
    Topic :: Software Development :: Embedded Systems
    Topic :: Software Development :: Libraries
    Topic :: System :: Distributed Computing
    Topic :: System :: Networking
    License :: OSI Approved :: MIT License
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8

[options]
zip_safe = False
include_package_data = True
packages = find:

[options.package_data]
* = *

[tool:pytest]
# https://docs.pytest.org/en/latest/pythonpath.html#invoking-pytest-versus-python-m-pytest
norecursedirs =
    pyuavcan/application
testpaths        = pyuavcan tests
python_files     = *.py
python_classes   = _UnitTest
python_functions = _unittest_
# Verbose logging is required to ensure full coverage of conditional logging branches.
log_level        = DEBUG
log_cli_level    = DEBUG
log_cli          = true
addopts          = --doctest-modules -v --fulltrace
# Deprecation warnings must be ignored because some of the tested generated data types are marked deprecated on purpose.
# NumPy sometimes emits "invalid value encountered in multiply" which we don't care about.
filterwarnings =
    error
    ignore::DeprecationWarning
    ignore:invalid value encountered in multiply:RuntimeWarning

[mypy]
# Python version is not specified to allow checking against different versions
warn_return_any        = True
warn_unused_configs    = True
disallow_untyped_defs  = True
check_untyped_defs     = True
no_implicit_optional   = True
warn_redundant_casts   = True
warn_unused_ignores    = True
show_error_context     = True
new_semantic_analyzer  = True

[mypy-pytest]
ignore_missing_imports = True

[mypy-pydsdl]
ignore_missing_imports = True

[mypy-nunavut]
ignore_missing_imports = True

[mypy-nunavut.*]
ignore_missing_imports = True

[mypy-numpy.*]
ignore_missing_imports = True

[coverage:run]
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    assert False
    if False:
    if __name__ == .__main__.:

[pycodestyle]
# E221 multiple spaces before operator
# E241 multiple spaces after ':'
ignore          = E221, E241
max-line-length = 120
show-source     = True
