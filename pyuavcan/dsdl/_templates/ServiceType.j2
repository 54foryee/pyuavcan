{#-
 # Copyright (c) 2019 UAVCAN Development Team
 # This software is distributed under the terms of the MIT License.
 # Author: Pavel Kirienko <pavel.kirienko@zubax.com>
-#}

{% extends "base.j2" -%}
{%- block contents -%}

{%- set parent_class_name = '%s_%s_%s'|format(T.short_name, T.version.major, T.version.minor) -%}

# noinspection PyPep8Naming, SpellCheckingInspection
class {{ T.short_name }}_{{ T.version.major }}_{{ T.version.minor }}(_dsdl_.CompositeObject):
    {{ data_schema('Request',  T.request_type, parent_class_name)|indent }}

    {{ data_schema('Response', T.response_type, parent_class_name)|indent }}

    def _serialize_aligned_(self, _ser_: _dsdl_.Serializer) -> None:
        raise TypeError('Service type {{ T }} cannot be serialized')

    @staticmethod
    def _deserialize_aligned_(_des_: _dsdl_.Deserializer) -> _dsdl_.CompositeObject:
        raise TypeError('Service type {{ T }} cannot be deserialized')

    def __str__(self) -> str:
        return '{{ T.full_name }}.{{ T.version.major }}.{{ T.version.minor }}()'

    __repr__ = __str__

    _TYPE_: _pydsdl_.ServiceType = _dsdl_.CompositeObject._restore_constant_(
        {{ T | pickle | indent(8) }}
    )
    assert isinstance(_TYPE_, _pydsdl_.ServiceType)

{%- endblock -%}
