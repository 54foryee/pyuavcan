#
# Copyright (c) 2019 UAVCAN Development Team
# This software is distributed under the terms of the MIT License.
# Author: Pavel Kirienko <pavel.kirienko@zubax.com>
#

import os
import sys
import typing
import pathlib
import dataclasses

import pyuavcan


# Base data directory. The location is OS-dependent.
if hasattr(sys, 'getwindowsversion'):  # pragma: no cover
    _appdata_env = os.getenv('LOCALAPPDATA') or os.getenv('APPDATA')
    assert _appdata_env, 'Cannot determine location of the app data directory'
    BASE_DATA_DIR = pathlib.Path(_appdata_env, 'UAVCAN', 'PyUAVCAN')
else:
    BASE_DATA_DIR = pathlib.Path('~/.uavcan/pyuavcan').expanduser()

# This path is unique per library version.
VERSION_SPECIFIC_DATA_DIR = BASE_DATA_DIR / f'v{pyuavcan.__version__}'

# It's version-specific so that we won't attempt to load packages generated by another version.
DEFAULT_DSDL_GENERATED_PACKAGES_DIR = VERSION_SPECIFIC_DATA_DIR / 'dsdl-generated-packages'


@dataclasses.dataclass(frozen=True)
class CommandInfo:
    """
    The name of the Python module (or package) will be used as the primary name of the command with underscores
    replaced with minus characters: "foo_bar.py" --> "foo-bar". Aliases are optional.
    """
    help:     str
    examples: str = ''
    aliases:  typing.Sequence[str] = dataclasses.field(default_factory=list)
